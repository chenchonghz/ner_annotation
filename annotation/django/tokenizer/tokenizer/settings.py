"""
Django settings for tokenizer project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5e7**_@2^09!y&blm#z=9*(44hw_#o+1ia^#(47)jyk1!!d=mg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'editor',
    'ner',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'tokenizer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tokenizer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django_mysqlpool.backends.mysqlpool',
        'NAME': 'boson_file_state',
        'USER': 'root',
        'PASSWORD': '',
        #'USER': 'boson',
        #'PASSWORD': 'boson123456',
        #'HOST': 'rds27w6rep0tx1t2fef9public.mysql.rds.aliyuncs.com',
        #'HOST': 'boson.ckxiwph2m7md.us-west-2.rds.amazonaws.com',
        'HOST': 'localhost',
        'PORT': '3306',
    },
    'aws': {
        'ENGINE': 'django_mysqlpool.backends.mysqlpool',
        'NAME': 'boson_file_state',
        'USER': 'boson',
        'PASSWORD': 'boson123456',
        'HOST': 'boson.ckxiwph2m7md.us-west-2.rds.amazonaws.com',
        'PORT': '3306',
    },
    'aliyun': {
        'ENGINE': 'django_mysqlpool.backends.mysqlpool',
        'NAME': 'boson_file_state',
        'USER': 'boson',
        'PASSWORD': 'boson123456',
        'HOST': 'rds27w6rep0tx1t2fef9public.mysql.rds.aliyuncs.com',
        'PORT': '3306',
    }
}

CONN_MAX_AGE = None

# Logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        #'file': {
        #    'level': 'INFO',
        #    'class': 'logging.FileHandler',
        #    'filename': '/root/boson/annotation/django/tokenizer/debug.log',
        #},
    },
    'loggers': {
        #'django.request': {
        #    'handlers': ['file'],
        #    'level': 'INFO',
        #    'propagate': False,
        #},
        #'django.db.backends': {
        #    'handlers': ['console'],
        #    'level': 'DEBUG',
        #},
        #'django.security': {
        #    'handlers': ['file'],
        #    'level': 'ERROR',
        #}
    }
}

# Import the reverse_lazy method to get the URL of a URL pattern from its name
from django.core.urlresolvers import reverse_lazy
LOGIN_URL = '/editor/login/'

# LOGIN_REDIRECT_URL setting refers to the URL to which the user will be redirected
# after a successful login.

LOGIN_REDIRECT_URL = reverse_lazy('workspace_root')


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'editor/static/')

STATIC_URL = '/static/'

BAIDU_API_KEY = 'vjQFfSmroeeTzBu5Caf3qLcA'