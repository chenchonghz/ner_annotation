# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import datetime
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cancer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('admission_date', models.CharField(max_length=200, null=True, blank=True)),
                ('discharge_date', models.CharField(max_length=200, null=True, blank=True)),
                ('department', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe9\xaa\xa8\xe7\xa7\x91'), (2, b'\xe6\x94\xbe\xe7\x96\x97\xe7\xa7\x91'), (3, b'\xe8\x82\xbf\xe7\x98\xa4\xe7\xa7\x91'), (4, b'\xe8\xa1\x80\xe6\xb6\xb2\xe7\xa7\x91')])),
                ('pre_diagnosis', models.CharField(max_length=200, null=True, blank=True)),
                ('diagnosis', models.CharField(max_length=200, null=True, blank=True)),
                ('diagnosis_basis', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x89\x8b\xe6\x9c\xaf\xe7\x97\x85\xe7\x90\x86'), (2, b'\xe7\xa9\xbf\xe5\x88\xba\xe7\x97\x85\xe7\x90\x86'), (3, b'\xe5\x85\xb6\xe5\xae\x83')])),
                ('cancer_property', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe5\x8e\x9f\xe5\x8f\x91'), (2, b'\xe8\xbd\xac\xe7\xa7\xbb'), (3, b'\xe4\xb8\x8d\xe7\xa1\xae\xe5\xae\x9a')])),
                ('cancer_type', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe8\x89\xaf\xe6\x80\xa7'), (2, b'\xe6\x81\xb6\xe6\x80\xa7')])),
                ('recurrence', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe9\xa6\x96\xe5\x8f\x91'), (2, b'\xe5\xa4\x8d\xe5\x8f\x91')])),
                ('focus', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe5\x8d\x95\xe5\x8f\x91'), (2, b'\xe5\xa4\x9a\xe5\x8f\x91')])),
                ('location', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe4\xb8\x8a\xe9\xa2\x88\xe6\xa4\x8e'), (2, b'\xe4\xb8\x8b\xe9\xa2\x88\xe6\xa4\x8e'), (3, b'\xe9\xa2\x88\xe8\x83\xb8\xe6\xae\xb5'), (4, b'\xe4\xb8\x8a\xe8\x83\xb8\xe6\xa4\x8e'), (5, b'\xe4\xb8\x8b\xe8\x83\xb8\xe6\xa4\x8e'), (6, b'\xe8\x85\xb0\xe6\xa4\x8e'), (7, b'\xe9\xaa\xb6\xe5\xb0\xbe\xe6\xa4\x8e')])),
                ('infection_spinal', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('infection_organ', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('infection_organ_controllable', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe5\x90\xa6')])),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='cancer_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='cancer_download', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('major_complain', models.CharField(max_length=200, null=True, blank=True)),
                ('recurrence', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('transfer', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('fixation_loose', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe5\x90\xa6')])),
                ('fixation_break', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe5\x90\xa6')])),
                ('CT_fusion', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe5\x90\xa6')])),
                ('method', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe7\x97\x85\xe4\xba\xba\xe6\x9d\xa5\xe8\xaf\x8a'), (2, b'\xe7\x94\xb5\xe8\xaf\x9d\xe5\x92\xa8\xe8\xaf\xa2')])),
                ('DOD', models.CharField(max_length=200, null=True, blank=True)),
                ('followup_date', models.CharField(max_length=200, null=True, blank=True)),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='followup_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='followup_download', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subject', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('visible_to', models.CharField(default=b'\xe6\x88\x91\xe8\x87\xaa\xe5\xb7\xb1', max_length=20, blank=True, choices=[(b'\xe8\xae\xbf\xe5\xae\xa2', b'\xe8\xae\xbf\xe5\xae\xa2'), (b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7', b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (b'\xe6\x88\x91\xe8\x87\xaa\xe5\xb7\xb1', b'\xe6\x88\x91\xe8\x87\xaa\xe5\xb7\xb1')])),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='log_created_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='log_download_by', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('sex', models.CharField(max_length=200, null=True, blank=True)),
                ('DOB', models.CharField(max_length=200, null=True, blank=True)),
                ('social_id', models.CharField(max_length=200, null=True, blank=True)),
                ('location', models.CharField(max_length=200, null=True, blank=True)),
                ('phone', models.CharField(max_length=200, null=True, blank=True)),
                ('DOD', models.CharField(max_length=200, null=True, blank=True)),
                ('relative', models.IntegerField(default=0, blank=True, choices=[(1, b'\xe7\x88\xb6\xe6\xaf\x8d'), (2, b'\xe9\x85\x8d\xe5\x81\xb6'), (3, b'\xe5\xad\x90\xe5\xa5\xb3'), (4, b'\xe5\x85\xb6\xe4\xbb\x96'), (0, b'')])),
                ('relative_phone', models.CharField(max_length=200, null=True, blank=True)),
                ('relative_email', models.EmailField(max_length=200, null=True, blank=True)),
                ('relative_wechat', models.CharField(max_length=200, null=True, blank=True)),
                ('relative_in_contact', models.IntegerField(default=0, blank=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe4\xb8\x8d\xe6\x98\xaf'), (0, b'')])),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='patient_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='patient_download', to=settings.AUTH_USER_MODEL, blank=True)),
                ('updated_by', models.ManyToManyField(related_name='patient_updated', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('EQ5D_1', models.IntegerField(null=True, blank=True)),
                ('EQ5D_2', models.IntegerField(null=True, blank=True)),
                ('EQ5D_3', models.IntegerField(null=True, blank=True)),
                ('EQ5D_4', models.IntegerField(null=True, blank=True)),
                ('EQ5D_5', models.IntegerField(null=True, blank=True)),
                ('date', models.CharField(max_length=200, null=True, blank=True)),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='questionnaire_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='questionnaire_download', to=settings.AUTH_USER_MODEL, blank=True)),
                ('patient', models.ForeignKey(related_name='questionnarires', blank=True, to='dashboard.Patient', null=True)),
                ('updated_by', models.ManyToManyField(related_name='questionnaire_updated', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('admission_date', models.CharField(max_length=200, null=True, blank=True)),
                ('pain_VAS', models.CharField(max_length=2, null=True, blank=True)),
                ('night_pain', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('stay_in_bed', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('root_pain', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('numb', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('enclosed_mass', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('abnormal_urine', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('duration', models.CharField(max_length=200, null=True, blank=True)),
                ('muscle', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\xad\xa3\xe5\xb8\xb8'), (2, b'\xe5\x87\x8f\xe5\xbc\xb1')])),
                ('feel', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\xad\xa3\xe5\xb8\xb8'), (2, b'\xe5\x87\x8f\xe5\xbc\xb1')])),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='symptom_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='symptom_download', to=settings.AUTH_USER_MODEL, blank=True)),
                ('patient', models.ForeignKey(related_name='symptoms', blank=True, to='dashboard.Patient', null=True)),
                ('updated_by', models.ManyToManyField(related_name='symptom_updated', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('project_date', models.CharField(max_length=200, null=True, blank=True)),
                ('project_name', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x89\x8b\xe6\x9c\xaf\xe7\x97\x85\xe7\x90\x86'), (2, b'\xe7\xa9\xbf\xe5\x88\xba\xe7\x97\x85\xe7\x90\x86'), (3, b'PET-CT'), (4, b'\xe7\x97\x85\xe5\x8f\x98MR'), (5, b'\xe7\x97\x85\xe5\x8f\x98CT'), (6, b'\xe7\x97\x85\xe5\x8f\x98X\xe7\xba\xbf\xe7\x89\x87'), (7, b'\xe9\xaa\xa8\xe6\x89\xab\xe6\x8f\x8f')])),
                ('result_discription', models.CharField(max_length=200, null=True, blank=True)),
                ('diagosis', models.CharField(max_length=200, null=True, blank=True)),
                ('pre_test', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe5\x90\xa6')])),
                ('wbb_1_12', models.CharField(max_length=200, null=True, blank=True)),
                ('wbb_A_F', models.CharField(max_length=200, null=True, blank=True)),
                ('CT_property', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\xba\xb6\xe9\xaa\xa8'), (2, b'\xe6\x88\x90\xe9\xaa\xa8'), (3, b'\xe6\xb7\xb7\xe5\x90\x88')])),
                ('X_ray', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\xad\xa3\xe5\xb8\xb8'), (2, b'\xe5\x8d\x8a\xe8\x84\xb1\xe4\xbd\x8d/\xe6\xbb\x91\xe7\xa7\xbb'), (3, b'\xe4\xbe\xa7\xe5\x87\xb8/\xe5\x90\x8e\xe5\x87\xb8')])),
                ('collapse', models.IntegerField(blank=True, null=True, choices=[(1, b'<50%'), (2, b'>50%'), (3, b'\xe5\x8f\x97\xe7\xb4\xaf>50%\xe4\xbd\x86\xe6\x97\xa0\xe5\xa1\x8c\xe9\x99\xb7'), (4, b'\xe6\x97\xa0')])),
                ('lateral_involvement', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x98\xaf'), (2, b'\xe5\x90\xa6'), (3, b'\xe4\xb8\x8d\xe6\xb6\x89\xe5\x8f\x8a')])),
                ('vertebral_artery_involvement', models.CharField(max_length=200, null=True, blank=True)),
                ('enneking', models.CharField(max_length=200, null=True, blank=True)),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='test_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='test_download', to=settings.AUTH_USER_MODEL, blank=True)),
                ('patient', models.ForeignKey(related_name='tests', blank=True, to='dashboard.Patient', null=True)),
                ('updated_by', models.ManyToManyField(related_name='test_updated', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('DB_ID', models.CharField(max_length=200, blank=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('EMR_id', models.CharField(max_length=200, null=True, blank=True)),
                ('surgery_date', models.CharField(max_length=200, null=True, blank=True)),
                ('surgeon', models.CharField(max_length=200, null=True, blank=True)),
                ('approach', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe5\x90\x8e\xe8\xb7\xaf'), (2, b'\xe5\x89\x8d\xe8\xb7\xaf'), (3, b'\xe4\xbe\xa7\xe5\x89\x8d\xe6\x96\xb9\xe5\x85\xa5\xe8\xb7\xaf'), (4, b'\xe5\x89\x8d\xe5\x90\x8e\xe8\x81\x94\xe5\x90\x88'), (5, b'\xe9\xa2\x8c\xe4\xb8\x8b\xe5\x85\xa5\xe8\xb7\xaf'), (6, b'\xe7\xbb\x8f\xe5\x8f\xa3\xe5\x85\xa5\xe8\xb7\xaf'), (7, b'\xe5\x8a\x88\xe4\xb8\x8b\xe9\xa2\x8c\xe9\xaa\xa8\xe5\x85\xa5\xe8\xb7\xaf')])),
                ('location', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe4\xb8\x8a\xe9\xa2\x88\xe6\xa4\x8e'), (2, b'\xe4\xb8\x8b\xe9\xa2\x88\xe6\xa4\x8e'), (3, b'\xe9\xa2\x88\xe8\x83\xb8\xe6\xae\xb5'), (4, b'\xe4\xb8\x8a\xe8\x83\xb8\xe6\xa4\x8e'), (5, b'\xe4\xb8\x8b\xe8\x83\xb8\xe6\xa4\x8e'), (6, b'\xe8\x85\xb0\xe6\xa4\x8e'), (7, b'\xe9\xaa\xb6\xe9\xaa\xa8')])),
                ('method', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe5\xa7\x91\xe6\x81\xaf\xe6\x80\xa7\xe5\x87\x8f\xe5\x8e\x8b'), (2, b'\xe5\x9b\x8a\xe5\x86\x85\xe5\x88\xae\xe9\x99\xa4'), (3, b'\xe5\x9b\x8a\xe5\xa4\x96\xe7\xbb\x8f\xe7\x98\xa4\xe5\x88\x87\xe9\x99\xa4'), (4, b'\xe8\xbe\xb9\xe7\xbc\x98\xe6\x80\xa7\xe6\x95\xb4\xe5\x9d\x97\xe5\x88\x87\xe9\x99\xa4'), (5, b'\xe5\xb9\xbf\xe6\xb3\x9b\xe6\x80\xa7\xe6\x95\xb4\xe5\x9d\x97\xe5\x88\x87\xe9\x99\xa4')])),
                ('envelope_damage', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('sacrifice', models.CharField(max_length=200, null=True, blank=True)),
                ('bone_cement', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('radiofrequency', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\x9c\x89'), (2, b'\xe6\x97\xa0')])),
                ('total_time', models.IntegerField(null=True, blank=True)),
                ('bleeding_vol', models.IntegerField(null=True, blank=True)),
                ('allogeneic_blood', models.IntegerField(null=True, blank=True)),
                ('surgery_complication', models.CharField(max_length=200, null=True, blank=True)),
                ('surgery_comment', models.CharField(max_length=200, null=True, blank=True)),
                ('post_complication', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe4\xbc\xa4\xe5\x8f\xa3\xe6\x84\x9f\xe6\x9f\x93'), (2, b'\xe5\x92\xbd\xe5\x90\x8e\xe5\xa3\x81\xe6\x84\x9f\xe6\x9f\x93\xe6\x88\x96\xe4\xb8\x8d\xe6\x84\x88\xe5\x90\x88'), (3, b'\xe8\x82\xba\xe7\x82\x8e'), (4, b'\xe6\xb3\x8c\xe5\xb0\xbf\xe7\xb3\xbb\xe6\x84\x9f\xe6\x9f\x93'), (5, b'\xe7\xa5\x9e\xe7\xbb\x8f\xe6\x8d\x9f\xe5\xae\xb3\xe8\xa1\xa8\xe7\x8e\xb0')])),
                ('arterial_embolization_method', models.CharField(max_length=200, null=True, blank=True)),
                ('arterial_embolization_name', models.CharField(max_length=200, null=True, blank=True)),
                ('bone_cement_num', models.CharField(max_length=200, null=True, blank=True)),
                ('bone_cement_location', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe6\xa4\x8e\xe4\xbd\x93\xe4\xb8\x80\xe4\xbe\xa7'), (2, b'\xe6\x95\xb4\xe4\xb8\xaa\xe6\xa4\x8e\xe4\xbd\x93'), (3, b'\xe6\xa4\x8e\xe4\xbd\x93\xe4\xb8\x80\xe4\xbe\xa7+\xe9\x99\x84\xe4\xbb\xb6'), (4, b'\xe6\x95\xb4\xe4\xb8\xaa\xe6\xa4\x8e\xe4\xbd\x93+\xe9\x99\x84\xe4\xbb\xb6')])),
                ('support_therapy_type', models.IntegerField(blank=True, null=True, choices=[(1, b'Halo\xe6\x9e\xb6'), (2, b'\xe6\x9e\x95\xe9\xa2\x88\xe8\x83\xb8\xe6\x94\xaf\xe5\x85\xb7'), (3, b'\xe9\xa2\x88\xe6\xa4\x8e\xe5\x9b\xb4\xe9\xa2\x86\xef\xbc\x88\xe9\xa2\x88\xe6\x89\x98\xef\xbc\x89'), (4, b'\xe8\x83\xb8\xe8\x85\xb0\xe6\xa4\x8e\xe6\x94\xaf\xe5\x85\xb7')])),
                ('support_therapy_start_date', models.CharField(max_length=200, null=True, blank=True)),
                ('radiotherapy_dose', models.CharField(max_length=200, null=True, blank=True)),
                ('radiotherapy_course', models.CharField(max_length=200, null=True, blank=True)),
                ('radiotherapy_start_date', models.CharField(max_length=200, null=True, blank=True)),
                ('chemotherapy_plan', models.CharField(max_length=200, null=True, blank=True)),
                ('chemotherapy_start_date', models.CharField(max_length=200, null=True, blank=True)),
                ('other_treatment_drug', models.IntegerField(blank=True, null=True, choices=[(1, b'\xe4\xba\x8c\xe7\xa3\xb7\xe9\x85\xb8\xe7\x9b\x90'), (2, b'\xe7\x8b\x84\xe8\xaf\xba\xe5\xa1\x9e\xe9\xba\xa6'), (3, b'\xe5\xb9\xb2\xe6\x89\xb0\xe7\xb4\xa0'), (4, b'\xe9\x9d\xb6\xe5\x90\x91\xe8\x8d\xaf\xe7\x89\xa9')])),
                ('other_treatment_start_date', models.CharField(max_length=200, null=True, blank=True)),
                ('other_treatment_end_date', models.CharField(max_length=200, null=True, blank=True)),
                ('visible_to', models.IntegerField(default=2, blank=True, choices=[(1, b'\xe8\xae\xbf\xe5\xae\xa2'), (2, b'\xe6\xad\xa3\xe5\xbc\x8f\xe7\x94\xa8\xe6\x88\xb7'), (3, b'\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98')])),
                ('tagged', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Created Date', blank=True)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name=b'Updated date', null=True)),
                ('download_date', models.DateTimeField(null=True, verbose_name=b'Download Date', blank=True)),
                ('created_by', models.ForeignKey(related_name='treatment_created', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('download_by', models.ManyToManyField(related_name='treatment_download', to=settings.AUTH_USER_MODEL, blank=True)),
                ('patient', models.ForeignKey(related_name='treatments', blank=True, to='dashboard.Patient', null=True)),
                ('updated_by', models.ManyToManyField(related_name='treatment_updated', to=settings.AUTH_USER_MODEL, blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='log',
            name='related_obj',
            field=models.ForeignKey(related_name='related_log', blank=True, to='dashboard.Patient', null=True),
        ),
        migrations.AddField(
            model_name='log',
            name='updated_by',
            field=models.ManyToManyField(related_name='log_updated_by', to=settings.AUTH_USER_MODEL, blank=True),
        ),
        migrations.AddField(
            model_name='log',
            name='writer',
            field=models.ManyToManyField(related_name='writer', to=settings.AUTH_USER_MODEL, blank=True),
        ),
        migrations.AddField(
            model_name='followup',
            name='patient',
            field=models.ForeignKey(related_name='followups', blank=True, to='dashboard.Patient', null=True),
        ),
        migrations.AddField(
            model_name='followup',
            name='updated_by',
            field=models.ManyToManyField(related_name='followup_updated', to=settings.AUTH_USER_MODEL, blank=True),
        ),
        migrations.AddField(
            model_name='cancer',
            name='patient',
            field=models.ForeignKey(related_name='cancers', blank=True, to='dashboard.Patient', null=True),
        ),
        migrations.AddField(
            model_name='cancer',
            name='updated_by',
            field=models.ManyToManyField(related_name='cancer_updated', to=settings.AUTH_USER_MODEL, blank=True),
        ),
    ]
